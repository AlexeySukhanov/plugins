jQuery( document ).ready( function(){
    function convertNewLinesToBr(result) {
        result = result.replace(/(?:\n)/g, '\\n');
        return result;
    }

    function getFunctionName() {
        return 'add_sfg_' + Math.floor(Math.random() * Math.pow(10, 13));
    }

    function getDataID() {
        return jQuery('#data_id').val();
    }

    function schemaGenerate() {
        // generate php code
        let prefix  = ``;
        let postfix = ``;
        if ( getSettingsStatus() == 'page_type' || getSettingsStatus() == 'post_type' ) {
            let dataTypeName;
            let dataTypeCondition;
            if ( getSettingsStatus() == 'page_type' ) {
                dataTypeName = 'Page';
                dataTypeCondition  = 'is_page(' + getDataID() + ')';
            }
            if ( getSettingsStatus() == 'post_type' ) {
                dataTypeName = 'Post';
                dataTypeCondition = 'is_single(' + getDataID() + ')';
            }
            jQuery('#data_id').attr('placeholder', 'Enter ' + dataTypeName + ' ID');

            let functionName = getFunctionName();
            prefix  = 'function ' + functionName + '() {\nif ( '+ dataTypeCondition  +` ) {\n?>\n`;
            postfix = `\n<?php\n}\n}\nadd_action("wp_head", "` + functionName + `");`;
        }

        // prepare start, end etc..
        let start = prefix + `<script type="application/ld+json">{"@context":"https://schema.org","@type":"FAQPage","mainEntity":[`;
        let end =`]}</script><!-- Generated by https://mokalabs.com/ -->` + postfix;

        let items = [];
        let result = '';

        // add name
        jQuery('.sfg_name_input').each( function(index, element){
            items[index] = { name: jQuery(element).val() } ;
        });
        // add text
        jQuery('.sfg_text_input').each( function(index, element){
            items[index].text =  jQuery(element).val() ;
        });

        // generate items list
        for ( let i = 0; i < items.length; i++ ) {
            let coma = i == items.length - 1 ? '' : ',';
            result += `{"@type":"Question","name":"` + items[i].name + `","acceptedAnswer":{"@type":"Answer","text":"` + items[i].text + `"}}` + coma;
        }
        result = start + convertNewLinesToBr(result) + end;
        sfg_output.innerHTML = result;

    }

    function addItem() {
        let newItem = `
             <li class="sfg_item">
                <div class="sfg_draggable">
                    <svg viewBox="0 0 24 24"><path d="M9,3H11V5H9V3M13,3H15V5H13V3M9,7H11V9H9V7M13,7H15V9H13V7M9,11H11V13H9V11M13,11H15V13H13V11M9,15H11V17H9V15M13,15H15V17H13V15M9,19H11V21H9V19M13,19H15V21H13V19Z"></path></svg>
                </div>
                <div class="sfg_item_content">
                    <textarea placeholder="Question" class="sfg_input sfg_name_input" contenteditable="true"></textarea>
                    <textarea placeholder="Answer" class="sfg_input sfg_text_input"contenteditable></textarea>
                </div>
                <button class="sfg_delete_item" type="button">
                    <svg viewBox="0 0 24 24"><path d="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z"></path></svg>
                </button>
             </li>
        `;
        jQuery('.sfg_faq_list').append( newItem );

        jQuery('.sfg_delete_item').each( function () {
            jQuery(this).on( 'click', function () {
                jQuery(this).parent().remove();
                changePlaceholders();
                schemaGenerate();
            } );
        });
    }

    function changePlaceholders() {
        // for name areas
        jQuery('.sfg_name_input').each( function(index, element){
            jQuery(element).attr( 'placeholder', 'Question #' + ( index + 1 ) ) ;
        });
        // for text areas
        jQuery('.sfg_text_input').each( function(index, element){
            jQuery(element).attr( 'placeholder', 'Answer #' + ( index + 1 ) ) ;
        });
    }

    function getSettingsStatus() {
        let settingsStatus = jQuery('input[name=sfg_view]:checked').val();
        if ( settingsStatus == 'wp_view' ) {
            settingsStatus = jQuery('input[name=content_type]:checked').val();
        }
        //console.log( settingsStatus );
        return settingsStatus;
    }

    // init and generate
        jQuery('.sfg_faq_list').sortable();
        autosize(document.querySelectorAll('.sfg_item_content textarea'));
        changePlaceholders();
        schemaGenerate();

    // on-input regenerate
    jQuery(document).on( 'input', '.sfg_input', function () {
        schemaGenerate();
    });

    // add-item regenerate
    jQuery('#sfg_add_new').on( 'click', function() {
        addItem();
        autosize(document.querySelectorAll('.sfg_item_content textarea'));
        changePlaceholders();
        schemaGenerate();
    });

    // remove-item regenerate
    jQuery('.sfg_delete_item').each( function () {
        jQuery(this).on( 'click', function () {
            jQuery(this).parent().remove();
            changePlaceholders();
            schemaGenerate();
        } );
    });

    // sort-items regenerate
    jQuery( '.sfg_faq_list' ).on( 'sortbeforestop', function() {
        changePlaceholders();
        schemaGenerate();
    });

    // copy schema
    jQuery('#sfg_copy').on( 'click', function () {
        let sourceElement = document.getElementById('sfg_output');
        sourceElement.select();
        sourceElement.setSelectionRange(0, 99999);
        document.execCommand("copy");
    });

    // change settings
    jQuery('.sfg_select input[type=radio]').on('change', function(){
        schemaGenerate();
    });

    // change ID
    jQuery('.sfg_select input[type=number]').on('change', function(){
        schemaGenerate();
    });
});




